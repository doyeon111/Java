연습) 고객과 고객의 주문에 대한 데이터를 모두 출력
	select * from customer, orders where customer.custid = orders.custid;
	
	
연습) 고객과 고객의 주문에 대한 데이터를 고객번호 순으로 정렬하여 출력
	select * 
	from customer, orders
	where customer.custid = orders.custid
	order by customer.custid;
	
	
연습) 고객의 이름과 고객이 주문한 도서의 판매가격을 검색하세요.
	select name, saleprice
	from customer c, orders o
	where c.custid = o.custid;
	
	
연습) 고객별로 주문한 모든 도서의 총 판매액을 구하고, 고객별로 정렬하세요.
	select name, sum(saleprice)
	from customer c, orders o
	where c.custid = o.custid
	group by name
	order by name;
	
	
연습) 고객이름과 고객이 주문한 도서이름을 출력
	select name, bookname
	from customer c, book b, orders o
	where c.custid = o.custid and b.bookid = o.bookid;
	
	
연습) 가격이 20000원인 도서를 구매한 고객의 이름과 도서명을 출력
	select name, bookname
	from customer c, orders o, book b
	where c.custid = o.custid and b.bookid = o.bookid and
	price = 20000;
	
	
	
연습) 고객이름과 고객이 주문한 도서이름을 출력
	select name, bookname
	from customer c, book b, orders o
	where c.custid = o.custid and b.bookid = o.bookid
	order by name;
	
	==> 주문내역이 없는 고객이름은 출력되지 않아요.
	==> inner join : 양쪽 테이블에 모두 조건을 만족하는 레코드만 출력
	
	
-----------------------------------------------------------------------

만약, 주문내역이 없는 고객이름도 출력을 해야한다면 
==> outer join

-----------------------------------------------------------------------

* outer join 
	- 조인할 때에 두 개의 테이블 중에 조건을 만족하지 않더라도 포함시키고자 할 때에 사용한다.
	
	* left outer join
		- from 절을 기준으로 왼쪽에 있는 테이블은 조건을 만족하지 않더라도 모두 포함.
		
	* right outer join
		- from 절을 기준으로 오른쪽에 있는 테이블은 조건을 만족하지 않더라도 모두 포함
		
	* full outer join
		- 양쪽에 테이블을 모두 포함
	
--------------------------------------------------------------------------

* left outer join의 형식
	
	select 컬럼1, 컬럼2
	from 테이블1 left outer join 테이블2
	on 조건식;
	
	==> from절을 기준으로 왼쪽에 있는 테이블1의 내용은 조건을 만족하지 않더라도 모두 출력
	
	

* right outer join의 형식
	
	select 컬럼1, 컬럼2
	from 테이블1 right outer join 테이블2
	on 조건식;
	
	==> from절을 기준으로 오른쪽에 있는 테이블2의 내용은 조건을 만족하지 않더라도 모두 출력
	
	
----------------------------------------------------------------------------

연습) 고객의 이름과 고객이 주문한 도서의 판매가격을 출력
	select name, saleprice
	from customer, orders
	where customer.custid = orders.custid;
	
	
연습) 고객의 이름과 고객이 주문한 도서의 판매가격을 출력. 주문내역이 없는 고객의 이름도 출력
	select name, saleprice
	from customer left outer join orders
	on customer.custid = orders.custid;
	
	select name, saleprice
	from orders right outer join customer
	on orders.custid = customer.custid;
	
	
* 실습을 위하여 새로운 부서를 등록
	insert into dept values(50, '개발3팀', '제주');
	
	
	
연습) 모든 부서명과 그 부서에 근무하는 직원의 이름을 출력하세요. 단, 근무자가 없는 부서명도 출력
	select dname, ename
	from dept left outer join emp
	on dept.dno = emp.dno;
	
	select dname, ename
	from emp right outer join dept
	on dept.dno = emp.dno;
	
	
	
	* 실습을 위하여 다음의 레코드를 추가
	insert into book values(11, '재미있는 자바', '쌍용미디어', 30000);
	insert into book values(12, '즐거운 오라클', '쌍용미디어', 35000);
	
	
연습) 모든 도서명과 도서의 가격, 도서의 판매가격, 판매일을 출력합니다. 단, 판매되지 않는 도서의 정보도 포함
	select bookname, price, saleprice, orderdate
	from book left outer join orders
	on book.bookid = orders.bookid;
	
	

연습) 출판사 별로 총 판매한 도서의 수, 총 판매 금액을 출력. 단, 판매되지 않는 출판사도 포함
	select publicsher, count(saleprice), sum(saleprice)
	from book left outer join orders
	on book.bookid = orders.bookid
	group by publicsher;
	
	
	
	PUBLICSHER COUNT(SALEPRICE) SUM(SALEPRICE)
	---------- ---------------- --------------
	굿스포츠                  4          26000
	나무수                   2          18000
	대한미디어                2          43000
	이상미디어                3          46000
	삼성당                   0
	Pearson                2          19000
	쌍용미디어                0
		
	==> 쌍용미디어와 삼성당은 판매내역이 없어서 총 판매금액이 null이기 때문에 아무런 값도 표시되지 않는다.
		그 자리에 0으로 출력하고 싶으면 NVL함수를 사용한다.
	
---------------------------------------------------------------------------------

* NVL 함수
	- 특정 칼럼의 값이 null인 경우 다른 값으로 대체하는 함수이다.
	
	nvl(컬럼이름, 대체할 값)
	
	
연습) 출판사 별로 총 판매한 도서의 수, 총 판매 금액을 출력. 단, 판매되지 않는 출판사도 포함
	select publicsher, count(saleprice), nvl(sum(saleprice), 0)
	from book left outer join orders
	on book.bookid = orders.bookid
	group by publicsher;
	
	
	PUBLICSHER COUNT(SALEPRICE) NVL(SUM(SALEPRICE),0)
	---------- ---------------- ---------------------
	굿스포츠                  4                 26000
	나무수                   2                 18000
	대한미디어                2                 43000
	이상미디어                3                 46000
	삼성당                   0                     0
	Pearson                2                 19000
	쌍용미디어                0                     0
	
	
	
-----------------------------------------------------------------------------------

연습) 고객 별로 총 구매건수와 총 구매액을 출력합니다. 구매내역이 없는 고객명도 출력
	select name, count(saleprice), nvl(sum(saleprice), 0)
	from customer left outer join orders
	on customer.custid = orders.custid
	group by name;


연습) 부서 별로 근무자의 수, 평균급여를 출력하세요. 근무자가 없는 부서명도 출력하세요.
	select dname, count(eno), nvl(avg(salary), 0)
	from dept d left outer join emp e
	on d.dno = e.dno
	group by dname;
	
	
------------------------------------------------------------------------------------

* self join
	- 테이블 하나에서 어떤 컬럼이 자신의 또 다른 컬럼의 값을 참조하는 경우
	- 실제로 물리적으로는 테이블이 하나인데 마치 두 개인 것 처럼 애칭을 주어 조인하는 것을 말한다.
	
	
연습) 모든 직원의 이름과 관리자 이름을 출력
	select 사원.ename ename, 관리자.ename mname
	from emp 사원, emp 관리자
	where 사원.mgr = 관리자.eno;
	
	
연습) 모든 직원의 이름과 관리자의 이름을 출력. 관리자가 없는 사원의 이름도 출력
	select e.ename ename, m.ename mname
	from emp e left outer join emp m
	on e.mgr = m.eno; //e.mgr이 m.eno를 참조
	
	
	
연습) '서동혁'의 부하직원을 모두 출력
	select e.ename
	from emp e, emp m
	where e.mgr = m.eno and m.ename = '서동혁';
	
	
	
연습) '황예은'의 관리자 이름을 출력하세요.
	select m.ename
	from emp e, emp m
	where e.mgr = m.eno and e.ename = '황예은';
	
	
연습) 부서명을 입력받아 해당 부서의 근무하는 직원들의 이름을 모두 출력하세요.
	select dname, ename
	from dept d, emp e
	where d.dno = e.dno and dname = '개발1팀';
	
	
연습) 고객명과 출판사명을 입력받아 해당 고객에 해당 출판사에 출간하는 도서의 구매내역을 출력합니다. 
	고객번호, 고객명, 출판사명, 도서명, 도서가격, 구매가격, 구매일을 출력
	단, 최근의 구매일 순으로 출력하고 동일할 때에는 도서명 순으로 출력
	
	select c.custid, name, publicsher, b.bookname, price, saleprice, orderdate
	from customer c, book b, orders o
	where c.custid = o.custid and b.bookid = o.bookid and name = '박지성' and publicsher = '굿스포츠'
	order by orderdate desc, b.bookname;


레코드 추가
	insert into orders values(14, 1, 5, 8000, sysdate);
	insert into orders values(15, 1, 6, 6000, sysdate);
	

---------------------------------------------------------------------------------------------------

* 서브쿼리(부속질의, 하위질의, 중첩질의)
	- sql 문장 안에 포함되는 또 다른 sql문을 말한다.
	
	* 서브쿼리가 올 수 있는 곳
		select절, from절, where절
		
----------------------------------------------------------------------------------------------------

연습) 가장 비싼 도서의 이름을 출력
	- 가장 비싼 도서의 금액
		select max(price) from book;  ===> 35000
		
	- 가장 비싼 도서명(도서의 가격이 35000원인 도서명 출력)
		select bookname from book where price = 35000;
	
	-> select bookname from book 
		where price = (select max(price) from book); 
	
	
	
연습) 도서를 구매한 적이 있는 고객의 이름을 출력
	<서브쿼리>
	select name
	from customer 
	where custid in (select custid from orders);
	
	<조인>
	select distinct name 
	from customer c, orders o
	where c.custid = o.custid;
	
	==> 같은 문제를 조인으로도, 서브쿼리로도 표현할 수 있다.
	==> 자료의 수가 적을 때는 별 차이가 없지만 레코드의 수가 많을 때는 성능에 차이가 있다.
	==> 서브쿼리가 조인보다는 더 성능적인 면에서는 효율성이 높다.
	
	
	
연습) 서교동에 근무하는 모든 직원의 이름을 출력하세요.
	<조인>
	select ename
	from dept d, emp e
	where dloc = '서교동' and d.dno = e.dno;
	
	<서브쿼리>
	select ename
	from emp
	where dno in (select dno from dept where dloc = '서교동');
	
	
	
	
연습) 평균급여보다 더 높은 급여를 받는 직원들의 이름, 급여를 출력하세요.
	select ename, salary
	from emp
	where salary > (select avg(salary) from emp);
	
	
	
	
연습) 박지성이 구매한 적이 있는 도서를 구매한 고객의 이름을 출력하세요.
	
	- 박지성의 고객번호를 출력
		select custid from customer where name = '박지성';
		
	- 주문테이블로 부터 고객번호가 1번이 주문한 도서번호를 출력
		select bookid from orders where custid = (select custid from customer where name = '박지성');  -> 1, 3, 2, 5, 6 번의 책을 구매
		
	- 주문테이블로 부터 (1, 3, 2, 5, 6)번 도서를 구매한 고객번호를 출력
		select distinct custid 
		from orders 
		where bookid in (select bookid from orders where custid = (select custid from customer where name = '박지성'));
		==> 결과: 1, 2, 3, 5
		
	- 고객테이블로 부터 고객 번호가 1, 2, 3, 5번에 해당하는 고객이름을 출력
		select name
		from customer
		where custid in (select distinct custid 
						from orders 
						where bookid in 
						(select bookid from orders where custid = (select custid from customer where name = '박지성')))
						 and name <> '박지성'; ---> 박지성은 출력x

	
	
	
연습) '대한미디어'에서 출간하는 도서를 구매한 적이 있는 고객의 이름을 출력
	
	select name 
	from customer
	where custid in ( select custid 
						from orders
						where bookid in ( select bookid 
											from book 
											where publicsher = '대한미디어'));
	
	

--------------------------------------------------------------------------------------------------------------------

* 상관 서브쿼리(서브쿼리가 메인쿼리와 상관이 있다.)
	- 메인쿼리와 서브쿼리에 사용되는 테이블의 컬럼을 조건식에 서로 관련을 맺고있을 때에 사용한다.
	- 서브쿼리의 조건식에 메인쿼리의 테이블과 조건식이 필요한 경우를 말한다.


연습) 출판사별로 출판사의 평균 도서 가격보다 더 비싼 도서 이름을 출력
	select b1.bookname
	from book b1
	where b1.price > (select avg(b2.price)
						from book b2
						where b1.publicsher = b2.publicsher );
						
-------------------------------------------------------------

ex)
	select 칼럼1, 컬럼2, .... from 테이블1
	(select 컬럼3, from 테이블2 where 테이블1.컬럼 = 테이블2.컬럼5)

--------------------------------------------------------------------------------------------------------------------

* 집합연산

연습) 주문하지 않는 고객의 이름을 출력

	- 모든 고객의 이름 출력
		select name from customer;
		
	- 주문한 고객의 이름 출력
		select name from customer where custid in (select distinct custid from orders );
	
	
	- 주문하지 않는 고객의 이름 (모든 고객의 이름에서 주문한 고객의 이름을 빼줌)
		모든고객이름 minus 주문한 고객이름
		
		-> select name from customer 
			minus
			select name from customer where custid in (select distinct custid from orders);
	
	
------------------------------------------------------------------------------------------------------------

* exists
	- 서브쿼리의 결과의 레코드가 존재한다면 메인쿼리를 실행한다.
	- 그렇기 때문에 반드시 상관서브쿼리가 되어야 한다.
	
	
	형식)
		select 컬럼1, 컬럼2 from 테이블1
		where exists
		(select 컬럼3 from 테이블2 where 테이블1.컬럼1 = 테이블2.컬럼4);
	
	
연습) 주문이 있는 고객이름과 주소를 출력
	select name, address 
	from customer c
	where exists (select * from orders o
					where c.custid = o.custid);
				
-------------------------------------------------------------------------------------------------------------

연습) 1. 마당서점의 고객이 요구하는 다음 질문에 대해 sql 문을 작성하세요.
		(1) 박지성이 구매한 도서의 출판사 수
		(2) 박지성이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이
		(3) 박지성이 구매하지 않은 도서의 이름
		
		
		(1) select count(distinct publicsher)
			from book
			where bookid in (select bookid 
								from orders 
								where custid = (select custid 
													from customer 
													where name = '박지성')); 
		
		(2) select bookname, price, (price - saleprice) as 차이
			from book b, customer c, orders o
			where name = '박지성' and
			b.bookid = o.bookid and c.custid = o.custid; 
			
		(3) select bookname
			from book
			where bookid not in (select bookid 
									from orders 
									where custid = (select custid 
														from customer 
														where name = '박지성'));
		
		
SELECT NAME FROM CUSTOMER
WHERE custid IN ( SELECT custid 
					FROM ORDERS 
					WHERE bookid IN ( SELECT bookid 
										FROM book
										 WHERE publisher='굿 스포츠'))




	
	